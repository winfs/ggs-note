// Code generated by protoc-gen-go.
// source: status.proto
// DO NOT EDIT!

package msg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// id: 1
type Status struct {
	Code             *uint32 `protobuf:"varint,1,req,name=code" json:"code,omitempty"`
	Description      *string `protobuf:"bytes,2,req,name=description" json:"description,omitempty"`
	ByAction         *uint32 `protobuf:"varint,3,req,name=byAction" json:"byAction,omitempty"`
	Uid              *string `protobuf:"bytes,4,opt,name=uid" json:"uid,omitempty"`
	Param            *string `protobuf:"bytes,5,opt,name=param" json:"param,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Status) Reset()                    { *m = Status{} }
func (m *Status) String() string            { return proto.CompactTextString(m) }
func (*Status) ProtoMessage()               {}
func (*Status) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

func (m *Status) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *Status) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *Status) GetByAction() uint32 {
	if m != nil && m.ByAction != nil {
		return *m.ByAction
	}
	return 0
}

func (m *Status) GetUid() string {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return ""
}

func (m *Status) GetParam() string {
	if m != nil && m.Param != nil {
		return *m.Param
	}
	return ""
}

func init() {
	proto.RegisterType((*Status)(nil), "msg.Status")
}

func init() { proto.RegisterFile("status.proto", fileDescriptor3) }

var fileDescriptor3 = []byte{
	// 137 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0x2e, 0x49, 0x2c,
	0x29, 0x2d, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0xce, 0x2d, 0x4e, 0x57, 0x6a, 0x62,
	0xe4, 0x62, 0x0b, 0x06, 0x8b, 0x0a, 0x09, 0x71, 0xb1, 0x24, 0xe7, 0xa7, 0xa4, 0x4a, 0x30, 0x2a,
	0x30, 0x69, 0xf0, 0x06, 0x81, 0xd9, 0x42, 0x0a, 0x5c, 0xdc, 0x29, 0xa9, 0xc5, 0xc9, 0x45, 0x99,
	0x05, 0x25, 0x99, 0xf9, 0x79, 0x12, 0x4c, 0x0a, 0x4c, 0x1a, 0x9c, 0x41, 0xc8, 0x42, 0x42, 0x52,
	0x5c, 0x1c, 0x49, 0x95, 0x8e, 0xc9, 0x60, 0x69, 0x66, 0xb0, 0x4e, 0x38, 0x5f, 0x48, 0x80, 0x8b,
	0xb9, 0x34, 0x33, 0x45, 0x82, 0x45, 0x81, 0x51, 0x83, 0x33, 0x08, 0xc4, 0x14, 0x12, 0xe1, 0x62,
	0x2d, 0x48, 0x2c, 0x4a, 0xcc, 0x95, 0x60, 0x05, 0x8b, 0x41, 0x38, 0x80, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x2d, 0xde, 0x5f, 0x9f, 0x98, 0x00, 0x00, 0x00,
}
